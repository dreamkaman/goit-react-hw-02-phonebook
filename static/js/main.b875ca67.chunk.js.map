{"version":3,"sources":["RegistrationForm/RegistrationForm.module.css","ContactList/ContactList.module.css","App.module.css","RegistrationForm/InputElement/InputElement.jsx","Button/Button.jsx","RegistrationForm/RegistrationForm.jsx","Section/Section.jsx","ContactList/ContactList.jsx","App.js","index.js","RegistrationForm/InputElement/InputElement.module.css"],"names":["module","exports","InputElement","text","value","type","name","pattern","title","onChange","className","styles","block","label","htmlFor","input","required","Button","onClick","RegistrationForm","form","onSubmit","this","props","number","Component","Section","children","ContactList","contacts","length","elements","map","id","list","App","state","filter","handleChange","event","key","target","setState","handleSubmit","preventDefault","filterContacts","alert","prevstate","nanoid","contact","toUpperCase","includes","handleDelete","newContacts","parentElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b875ca67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"RegistrationForm_form__CyN3T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2ORbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"App_filter__2vLqq\"};","import PropTypes from 'prop-types';\n\nimport styles from './InputElement.module.css';\n\nconst InputElement = ({ text, value, type, name, pattern, title, onChange }) => {\n  return (\n    <div className={styles.block}>\n      <label className={styles.label} htmlFor=\"name\">\n        {text}\n      </label>\n      <input\n        value={value}\n        className={styles.input}\n        type={type}\n        name={name}\n        pattern={pattern}\n        title={title}\n        required\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default InputElement;\n\nInputElement.propTypes = {\n  text: PropTypes.string,\n  value: PropTypes.string,\n  type: PropTypes.string,\n  name: PropTypes.string,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nconst Button = ({ type, text, onClick }) => {\n  return (\n    <button type={type} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  type: PropTypes.oneOf(['submit', 'button', 'reset']).isRequired,\n  text: PropTypes.string,\n  onClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport InputElement from './InputElement';\nimport Button from '../Button';\n\nimport styles from './RegistrationForm.module.css';\n\nclass RegistrationForm extends Component {\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.props.onSubmit}>\n        <InputElement\n          value={this.props.name}\n          text=\"Name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          onChange={this.props.onChange}\n        />\n        <InputElement\n          value={this.props.number}\n          text=\"Number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          onChange={this.props.onChange}\n        />\n        <Button type=\"submit\" text=\"Add contacts\" />\n      </form>\n    );\n  }\n}\n\nexport default RegistrationForm;\n\nRegistrationForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// import { Component } from 'react';\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport Button from '../Button';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onClick }) => {\n  if (!contacts.length) {\n    return null;\n  }\n\n  const elements = contacts.map(({ name, id, number }) => {\n    return (\n      <li id={id} key={id} className={styles.list}>\n        {name}: {number} <Button type=\"button\" text=\"Delete\" onClick={onClick} />\n      </li>\n    );\n  });\n  return <ul>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string,\n    }),\n  ),\n  onClick: PropTypes.func,\n};\n","import { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport RegistrationForm from './RegistrationForm';\nimport Section from './Section';\nimport ContactList from './ContactList';\nimport InputElement from './RegistrationForm/InputElement';\n\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n    number: '',\n    filter: '',\n  };\n\n  handleChange = event => {\n    const key = event.target.name;\n    this.setState({\n      [key]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.filterContacts(this.state.name).length) {\n      alert(`${this.state.name} is already in contacts!`);\n\n      this.setState({\n        name: '',\n        number: '',\n      });\n      return;\n    }\n\n    this.setState(prevstate => ({\n      contacts: [\n        ...prevstate.contacts,\n        { id: nanoid(), name: this.state.name, number: this.state.number },\n      ],\n      name: '',\n      number: '',\n    }));\n  };\n\n  filterContacts = text =>\n    this.state.contacts.filter(contact => contact.name.toUpperCase().includes(text.toUpperCase()));\n\n  handleDelete = event => {\n    const newContacts = this.state.contacts.filter(\n      contact => contact.id !== event.target.parentElement.id,\n    );\n\n    this.setState(() => ({ contacts: newContacts, filter: '' }));\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <RegistrationForm\n            onSubmit={this.handleSubmit}\n            onChange={this.handleChange}\n            name={this.state.name}\n            number={this.state.number}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <InputElement\n            className={styles.filter}\n            name=\"filter\"\n            type=\"text\"\n            value={this.state.filter}\n            text=\"Find contacts by name\"\n            onChange={this.handleChange}\n          />\n          <ContactList\n            contacts={this.filterContacts(this.state.filter)}\n            onClick={this.handleDelete}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import styles from './index.module.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"InputElement_block__2cteh\",\"input\":\"InputElement_input__2rAw4\",\"label\":\"InputElement_label__3Cxyb\"};"],"sourceRoot":""}